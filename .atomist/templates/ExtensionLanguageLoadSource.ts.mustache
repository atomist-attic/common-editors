import {Project,File} from '@atomist/rug/model/Core'
import {ProjectEditor} from '@atomist/rug/operations/ProjectEditor'
import {PathExpression,TreeNode,TypeProvider} from '@atomist/rug/tree/PathExpression'
import {PathExpressionEngine} from '@atomist/rug/tree/PathExpression'
import {Match} from '@atomist/rug/tree/PathExpression'
import {Parameter} from '@atomist/rug/operations/RugOperation'

class Editors implements ProjectEditor {
    name: string = "LoadSource"
    description: string = "Uses antlr to load and parse your target source code"

    edit(project: Project) {
      let eng: PathExpressionEngine = project.context().pathExpressionEngine()
      let count = 0
      eng.with<TreeNode>(project, "//{{class_name}}()", n => {
        count++
      })

      if (count == 0)
       throw new Error("No target source found. Sad.")
    }
  }
export let editor = new Editors();