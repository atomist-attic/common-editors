scenario ChangeDependencyVersion should do something amazing for developers



let output = "pom.xml"

given
  /* Selects the current project and its source files
     as an initial point for then applying your editor
  */
  pom.xml = """<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>

    <groupId>com.jessitron</groupId>
    <artifactId>org-dep-graph</artifactId>
    <version>1.0-SNAPSHOT</version>

    <dependencies>
        <dependency>
            <groupId>com.atomist</groupId>
            <artifactId>artifact-source</artifactId>
            <version>3.0.1</version>
        </dependency>
        <dependency>
            <groupId>org.neo4j.driver</groupId>
            <artifactId>neo4j-java-driver</artifactId>
            <version>1.0.6</version>
        </dependency>
    </dependencies>

</project>
  """

when
  /* Run your editor */
  ChangeDependencyVersion artifact_id="artifact-source", new_version="3.1.0-SNAPSHOT", group_id="com.atomist"

then
  fileExists output
    and fileContains output "<version>3.1.0-SNAPSHOT</version>"
    and fileContains output "<version>1.0.6</version>" /* it didn't change the other dep */
