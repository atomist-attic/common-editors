/*
 * Copyright Â© 2016 Atomist, Inc.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *      http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

@description "renames a Java class, replacing one literal pattern with another"
@tag "java"
editor ClassRenamer

@displayName "Current Class Name"
@description "Name of Java class to rename"
@validInput "A valid Java class name, which contains only alphanumeric characters, $ and _ and does not start with a number"
param old_class: @java_class

@displayName "New Class Name"
@description "New name for the Java class"
@validInput "A valid Java class name, which contains only alphanumeric characters, $ and _ and does not start with a number"
param new_class: @java_class

with java.class c when { c.name().contains(old_class) }
  do renameByReplace old_class new_class

# Pick up and change all remaining references
# TODO shouldn't really need to do this: Calls to Rug methods should do it all
# It's inefficient and fragile (what if the class name is a common string)
with project
  do replace old_class new_class
